{
    "data" : [
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "plot.Gam(fit)",
        "> ",
        "plot.Gam(fit)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "plot(fit)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(dis ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(dis ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(dis ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = dis ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-2.28351 -0.64155 -0.07881  0.42998  5.15333 \n\n(Dispersion Parameter for gaussian family taken to be 1.0826)\n\n    Null Deviance: 1494.363 on 303 degrees of freedom\nResidual Deviance: 315.0301 on 291 degrees of freedom\nAIC: 901.5493 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 325.92  81.480  75.265 < 2.2e-16 ***\nns(age, 4)    4 595.04 148.760 137.413 < 2.2e-16 ***\nns(nox, 4)    4 258.37  64.593  59.666 < 2.2e-16 ***\nResiduals   291 315.03   1.083                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "plot.Gam(fit)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall:\nlm(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.01030    0.12875  15.614  < 2e-16 ***\nns(medv, 4)1  0.18849    0.09161   2.058   0.0405 *  \nns(medv, 4)2 -0.14709    0.08479  -1.735   0.0838 .  \nns(medv, 4)3  0.26007    0.20005   1.300   0.1946    \nns(medv, 4)4 -0.18501    0.07538  -2.455",
        "   0.0147 *  \nns(age, 4)1  -0.21350    0.08853  -2.412   0.0165 *  \nns(age, 4)2  -0.18876    0.08808  -2.143   0.0329 *  \nns(age, 4)3  -0.39126    0.17945  -2.180   0.0300 *  \nns(age, 4)4  -0.51286    0.07540  -6.802 5.88e-11 ***\nns(nox, 4)1  -0.83833    0.08122 -10.321  < 2e-16 ***\nns(nox, 4)2  -1.15222    0.08990 -12.817  < 2e-16 ***\nns(nox, 4)3  -1.64064    0.17109  -9.589  < 2e-16 ***\nns(nox, 4)4  -1.05747    0.08897 -11.885  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1",
        "\n\nResidual standard error: 0.223 on 291 degrees of freedom\nMultiple R-squared:  0.8433,\tAdjusted R-squared:  0.8368 \nF-statistic: 130.5 on 12 and 291 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(dis ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = dis ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-2.28351 -0.64155 -0.07881  0.42998  5.15333 \n\n(Dispersion Parameter for gaussian family taken to be 1.0826)\n\n    Null Deviance: 1494.363 on 303 degrees of freedom\nResidual Deviance: 315.0301 on 291 degrees of freedom\nAIC: 901.5493 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 325.92  81.480  75.265 < 2.2e-16 ***\nns(age, 4)    4 595.04 148.760 137.413 < 2.2e-16 ***\nns(nox, 4)    4 258.37  64.593  59.666 < 2.2e-16 ***\nResiduals   291 315.03   1.083                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "simplify(fit)",
        "Call:\ngam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\n\nDegrees of Freedom: 303 total; 291 Residual\nResidual Deviance: 14.47036 \n",
        "> ",
        "fit1 <- gam(log(dis) + ns(medv, 4) + ns(nox, 4) + age)",
        "Error in environment(formula) : object 'dis' not found\n",
        "> ",
        "fit1 <- gam(log(dis) + ns(medv, 4) + ns(nox, 4) + age)",
        "Error in environment(formula) : object 'dis' not found\n",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "plot(fit)",
        "> ",
        "fit1 <- gam(log(dis) + ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "Error in terms(formula, gam.slist, data = data) : object 'dis' not found\n",
        "> ",
        "fit1 <- gam(log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "> ",
        "plot(fit1)",
        "> ",
        "summary(fit1)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\nDeviance Residuals:\n       Min         1Q     Median         3Q        Max \n-0.5186105 -0.1744587 -0.0008243  0.1493743  0.6846241 \n\n(Dispersion Parameter for gaussian family taken to be 0.0523)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 15.3902 on 294 degrees of freedom\nAIC: -22.2068 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)",
        "    \nns(medv, 4)   4 28.997  7.2492 138.482 < 2.2e-16 ***\nns(nox, 4)    4 46.301 11.5753 221.123 < 2.2e-16 ***\nage           1  1.635  1.6351  31.235 5.215e-08 ***\nResiduals   294 15.390  0.0523                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "fit1 <- lm(log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "> ",
        "plot(fit1)",
        "> ",
        "summary(fit1)",
        "\nCall:\nlm(formula = log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51861 -0.17446 -0.00082  0.14937  0.68462 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.0437291  0.1140218  17.924  < 2e-16 ***\nns(medv, 4)1  0.2890149  0.0902959   3.201  0.00152 ** \nns(medv, 4)2 -0.0917174  0.0854672  -1.073  0.28409    \nns(medv, 4)3  0.3962800  0.1987779   1.994  0.04712 *  \nns(medv, 4)4 -0.1390373  0.0763568  -1.821",
        "  0.06964 .  \nns(nox, 4)1  -0.8098029  0.0800935 -10.111  < 2e-16 ***\nns(nox, 4)2  -1.1609311  0.0909594 -12.763  < 2e-16 ***\nns(nox, 4)3  -1.6427988  0.1737209  -9.457  < 2e-16 ***\nns(nox, 4)4  -1.1105137  0.0899119 -12.351  < 2e-16 ***\nage          -0.0046820  0.0008377  -5.589 5.22e-08 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.2288 on 294 degrees of freedom\nMultiple R-squared:  0.8333,\tAdjusted R-squared:  0.8282 \nF-statistic: 163.3",
        " on 9 and 294 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "fit1 <- gam(log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "> ",
        "plot(fit1)",
        "> ",
        "summary(fit1)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\nDeviance Residuals:\n       Min         1Q     Median         3Q        Max \n-0.5186105 -0.1744587 -0.0008243  0.1493743  0.6846241 \n\n(Dispersion Parameter for gaussian family taken to be 0.0523)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 15.3902 on 294 degrees of freedom\nAIC: -22.2068 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)",
        "    \nns(medv, 4)   4 28.997  7.2492 138.482 < 2.2e-16 ***\nns(nox, 4)    4 46.301 11.5753 221.123 < 2.2e-16 ***\nage           1  1.635  1.6351  31.235 5.215e-08 ***\nResiduals   294 15.390  0.0523                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "fit1 <- gam(log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "> ",
        "plot(fit1)",
        "> ",
        "summary(fit1)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\nDeviance Residuals:\n       Min         1Q     Median         3Q        Max \n-0.5186105 -0.1744587 -0.0008243  0.1493743  0.6846241 \n\n(Dispersion Parameter for gaussian family taken to be 0.0523)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 15.3902 on 294 degrees of freedom\nAIC: -22.2068 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)",
        "    \nns(medv, 4)   4 28.997  7.2492 138.482 < 2.2e-16 ***\nns(nox, 4)    4 46.301 11.5753 221.123 < 2.2e-16 ***\nage           1  1.635  1.6351  31.235 5.215e-08 ***\nResiduals   294 15.390  0.0523                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "plot.Gam(fit)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "plot(fit)",
        "> ",
        "fit1 <- gam(log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "> ",
        "plot(fit1)",
        "> ",
        "summary(fit1)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\nDeviance Residuals:\n       Min         1Q     Median         3Q        Max \n-0.5186105 -0.1744587 -0.0008243  0.1493743  0.6846241 \n\n(Dispersion Parameter for gaussian family taken to be 0.0523)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 15.3902 on 294 degrees of freedom\nAIC: -22.2068 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)",
        "    \nns(medv, 4)   4 28.997  7.2492 138.482 < 2.2e-16 ***\nns(nox, 4)    4 46.301 11.5753 221.123 < 2.2e-16 ***\nage           1  1.635  1.6351  31.235 5.215e-08 ***\nResiduals   294 15.390  0.0523                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "fit1 <- gam(log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data=Btrain)",
        "> ",
        "plot(fit1)",
        "> ",
        "summary(fit1)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\nDeviance Residuals:\n       Min         1Q     Median         3Q        Max \n-0.5186105 -0.1744587 -0.0008243  0.1493743  0.6846241 \n\n(Dispersion Parameter for gaussian family taken to be 0.0523)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 15.3902 on 294 degrees of freedom\nAIC: -22.2068 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)",
        "    \nns(medv, 4)   4 28.997  7.2492 138.482 < 2.2e-16 ***\nns(nox, 4)    4 46.301 11.5753 221.123 < 2.2e-16 ***\nage           1  1.635  1.6351  31.235 5.215e-08 ***\nResiduals   294 15.390  0.0523                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "anova(fit,fit1)",
        "Analysis of Deviance Table\n\nModel 1: log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4)\nModel 2: log(dis) ~ ns(medv, 4) + ns(nox, 4) + age\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)    \n1       291      14.47                         \n2       294      15.39 -3 -0.91988 0.000347 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "plot(fit)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "Btest",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "plot(fit)",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- gam(log(dis) ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall: gam(formula = log(dis) ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), \n    data = Btrain)\nDeviance Residuals:\n     Min       1Q   Median       3Q      Max \n-0.45022 -0.16319 -0.01566  0.15747  0.69506 \n\n(Dispersion Parameter for gaussian family taken to be 0.0497)\n\n    Null Deviance: 92.3233 on 303 degrees of freedom\nResidual Deviance: 14.4704 on 291 degrees of freedom\nAIC: -34.9427 \n\nNumber of Local Scoring Iterations: 2 \n\nAnova for Parametric Effects\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nns(medv, 4)",
        "   4 28.997  7.2492  145.78 < 2.2e-16 ***\nns(age, 4)    4 35.619  8.9047  179.07 < 2.2e-16 ***\nns(nox, 4)    4 13.237  3.3093   66.55 < 2.2e-16 ***\nResiduals   291 14.470  0.0497                      \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.5, pretty=0)",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.4, pretty=0)",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.6, pretty=0)",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.7, pretty=1)",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.5, pretty=1)",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "plot.Gam(fit,terms = \"ns(medv, 4\")",
        "> ",
        "plot.Gam(fit,terms = \"ns(age, 4\")",
        "> ",
        "plot.Gam(fit,terms = \"ns(nox, 4\")",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "set.seed(123)",
        "> ",
        "s <- sample(nrow(Boston), round(.6*nrow(Boston)))",
        "> ",
        "Btrain <- Boston[s,]",
        "> ",
        "Btest <- Boston[-s,]",
        "> ",
        "",
        "> ",
        "fit <- lm(dis ~ ns(medv,4) + ns(age,4) + ns(nox,4), data = Btrain)",
        "> ",
        "summary(fit)",
        "\nCall:\nlm(formula = dis ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4), data = Btrain)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.2835 -0.6416 -0.0788  0.4300  5.1533 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    8.4092     0.6007  13.998  < 2e-16 ***\nns(medv, 4)1   0.5377     0.4274   1.258   0.2094    \nns(medv, 4)2  -0.8535     0.3956  -2.157   0.0318 *  \nns(medv, 4)3   0.5437     0.9334   0.583   0.5607    \nns(medv, 4)4  -0.8238     0.3517  -2.342   0.0198 *  ",
        "\nns(age, 4)1   -0.9428     0.4131  -2.282   0.0232 *  \nns(age, 4)2   -0.9370     0.4110  -2.280   0.0233 *  \nns(age, 4)3   -1.5055     0.8373  -1.798   0.0732 .  \nns(age, 4)4   -1.5121     0.3518  -4.298 2.35e-05 ***\nns(nox, 4)1   -4.8018     0.3790 -12.670  < 2e-16 ***\nns(nox, 4)2   -4.8281     0.4194 -11.511  < 2e-16 ***\nns(nox, 4)3   -8.5670     0.7983 -10.731  < 2e-16 ***\nns(nox, 4)4   -4.3260     0.4151 -10.420  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1",
        "\n\nResidual standard error: 1.04 on 291 degrees of freedom\nMultiple R-squared:  0.7892,\tAdjusted R-squared:  0.7805 \nF-statistic: 90.78 on 12 and 291 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "plot.Gam(fit,terms = \"ns(medv, 4\")",
        "> ",
        "plot.Gam(fit,terms = \"ns(age, 4\")",
        "> ",
        "plot.Gam(fit,terms = \"ns(nox, 4\")",
        "> ",
        "fit1 <- lm(dis ~ ns(medv,4) + ns(nox,4) + age, data = Btrain)",
        "> ",
        "summary(fit1)",
        "\nCall:\nlm(formula = dis ~ ns(medv, 4) + ns(nox, 4) + age, data = Btrain)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.4190 -0.6366 -0.0845  0.4784  5.2281 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   8.572403   0.518119  16.545  < 2e-16 ***\nns(medv, 4)1  0.707573   0.410308   1.724   0.0857 .  \nns(medv, 4)2 -0.765059   0.388366  -1.970   0.0498 *  \nns(medv, 4)3  0.783255   0.903253   0.867   0.3866    \nns(medv, 4)4 -0.741743   0.346968  -2.138   0.0334 *  \nns(nox, 4)1 ",
        " -4.784873   0.363947 -13.147  < 2e-16 ***\nns(nox, 4)2  -4.853901   0.413323 -11.744  < 2e-16 ***\nns(nox, 4)3  -8.607467   0.789394 -10.904  < 2e-16 ***\nns(nox, 4)4  -4.423420   0.408562 -10.827  < 2e-16 ***\nage          -0.016242   0.003807  -4.267 2.68e-05 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 1.04 on 294 degrees of freedom\nMultiple R-squared:  0.7873,\tAdjusted R-squared:  0.7808 \nF-statistic: 120.9 on 9 and 294 DF,  p-value: < 2.2e-16",
        "\n\n",
        "> ",
        "anova(fit1,fit)",
        "Analysis of Variance Table\n\nModel 1: dis ~ ns(medv, 4) + ns(nox, 4) + age\nModel 2: dis ~ ns(medv, 4) + ns(age, 4) + ns(nox, 4)\n  Res.Df    RSS Df Sum of Sq      F Pr(>F)\n1    294 317.78                           \n2    291 315.03  3    2.7513 0.8471  0.469\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - log(Btrain$dis))^2))",
        "Error: unexpected ')' in \"ems <- mean((predict(tre) - log(Btrain$dis))^2))\"\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "(ems <- mean((predict(tre) - log(Btrain$dis))^2))",
        "[1] 0.04608703\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - log(Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 0.04608703\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - log(Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 0.04608703\n",
        "> ",
        "",
        "> ",
        "pred <- predict(tre,newdata = Btest)",
        "> ",
        "mean((pred - log(Btest$dis))^2)",
        "[1] 0.05023406\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - log(Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 0.04608703\n",
        "> ",
        "",
        "> ",
        "pred <- predict(tre,newdata = Btest)",
        "> ",
        "mean((pred - log(Btest$dis))^2)",
        "[1] 0.05023406\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(log(dis) ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = log(dis) ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\" \"age\"\nNumber of terminal nodes:  6 \nResidual mean deviance:  0.04701 = 14.01 / 298 \nDistribution of residuals:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.630200 -0.153800  0.005823  0.000000  0.156700  0.567700 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 10.62292\n",
        "> ",
        "",
        "> ",
        "pred <- predict(tre,newdata = Btest)",
        "> ",
        "mean((pred - log(Btest$dis))^2)",
        "[1] 0.05023406\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(dis ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = dis ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\"  \"medv\"\nNumber of terminal nodes:  5 \nResidual mean deviance:  1.035 = 309.4 / 299 \nDistribution of residuals:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2.14700 -0.57740 -0.07306  0.00000  0.42270  5.04400 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 1.01777\n",
        "> ",
        "",
        "> ",
        "pred <- predict(tre,newdata = Btest)",
        "> ",
        "mean((pred - log(Btest$dis))^2)",
        "[1] 7.843007\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(dis ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = dis ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\"  \"medv\"\nNumber of terminal nodes:  5 \nResidual mean deviance:  1.035 = 309.4 / 299 \nDistribution of residuals:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2.14700 -0.57740 -0.07306  0.00000  0.42270  5.04400 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 1.01777\n",
        "> ",
        "",
        "> ",
        "pred <- predict(tre,newdata = Btest)",
        "> ",
        "mean((pred - Btest$dis)^2)",
        "[1] 0.8456966\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(dis ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = dis ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\"  \"medv\"\nNumber of terminal nodes:  5 \nResidual mean deviance:  1.035 = 309.4 / 299 \nDistribution of residuals:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2.14700 -0.57740 -0.07306  0.00000  0.42270  5.04400 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 1.01777\n",
        "> ",
        "",
        "> ",
        "tre1 <- tree(dis ~ medv+age+nox, data = Btest)",
        "> ",
        "temse <- mean((predict(tre1)-(Btest$dis))^2)",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(dis ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = dis ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\"  \"medv\"\nNumber of terminal nodes:  5 \nResidual mean deviance:  1.035 = 309.4 / 299 \nDistribution of residuals:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2.14700 -0.57740 -0.07306  0.00000  0.42270  5.04400 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 1.01777\n",
        "> ",
        "",
        "> ",
        "tre1 <- tree(dis ~ medv+age+nox, data = Btest)",
        "> ",
        "temse <- mean((predict(tre1)-(Btest$dis))^2)",
        "> ",
        "temse",
        "[1] 0.6011554\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(dis ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = dis ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\"  \"medv\"\nNumber of terminal nodes:  5 \nResidual mean deviance:  1.035 = 309.4 / 299 \nDistribution of residuals:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2.14700 -0.57740 -0.07306  0.00000  0.42270  5.04400 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 1.01777\n",
        "> ",
        "",
        "> ",
        "tre1 <- tree(dis ~ medv+age+nox, data = Btest)",
        "> ",
        "temse <- mean((predict(tre1)-(Btest$dis))^2)",
        "> ",
        "temse",
        "[1] 0.6011554\n",
        "> ",
        "library(tree)",
        "> ",
        "tre <- tree(dis ~ medv+age+nox, data=Btrain)",
        "> ",
        "summary(tre)",
        "\nRegression tree:\ntree(formula = dis ~ medv + age + nox, data = Btrain)\nVariables actually used in tree construction:\n[1] \"nox\"  \"medv\"\nNumber of terminal nodes:  5 \nResidual mean deviance:  1.035 = 309.4 / 299 \nDistribution of residuals:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2.14700 -0.57740 -0.07306  0.00000  0.42270  5.04400 \n",
        "> ",
        "",
        "> ",
        "plot(tre)",
        "> ",
        "text(tre, cex=.8, pretty=1)",
        "> ",
        "",
        "> ",
        "ems <- mean((predict(tre) - (Btrain$dis))^2)",
        "> ",
        "ems",
        "[1] 1.01777\n",
        "> ",
        "",
        "> ",
        "tre1 <- tree(dis ~ medv+age+nox, data = Btest)",
        "> ",
        "temse <- mean((predict(tre1)-(Btest$dis))^2)",
        "> ",
        "temse",
        "[1] 0.6011554\n",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  397.7303  374.0943  405.8605  563.9726 1500.3424\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  361.2618  366.5549  399.8148  571.5340 1499.0944\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "",
        "> ",
        "plot(cvtre$size,cvtre$dev,type = \"b\")",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  383.7294  387.9179  431.6767  577.8562 1509.7429\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "",
        "> ",
        "plot(cvtre$size,cvtre$dev,type = \"b\")",
        "> ",
        "",
        "> ",
        "m <- which.min(cvtre$dev)",
        "> ",
        "cvtre$size[m]",
        "[1] 5\n",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  362.1981  361.9438  407.6760  567.0043 1502.0830\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "",
        "> ",
        "plot(cvtre$size,cvtre$dev,type = \"b\")",
        "> ",
        "",
        "> ",
        "m <- which.min(cvtre$dev)",
        "> ",
        "cvtre$size[m]",
        "[1] 4\n",
        "> ",
        "",
        "> ",
        "tree <- prune.tree(tre,best = 4)",
        "> ",
        "plot(tree)",
        "> ",
        "text(tree,cex = .5,pretty=0)",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  374.7225  376.9445  401.5231  563.5165 1504.4886\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "",
        "> ",
        "plot(cvtre$size,cvtre$dev,type = \"b\")",
        "> ",
        "",
        "> ",
        "m <- which.min(cvtre$dev)",
        "> ",
        "cvtre$size[m]",
        "[1] 5\n",
        "> ",
        "",
        "> ",
        "tree <- prune.tree(tre,best = 4)",
        "> ",
        "plot(tree)",
        "> ",
        "text(tree,cex = .8,pretty=0)",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  393.3234  397.2250  401.3773  564.3044 1507.1035\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "",
        "> ",
        "plot(cvtre$size,cvtre$dev,type = \"b\")",
        "> ",
        "",
        "> ",
        "m <- which.min(cvtre$dev)",
        "> ",
        "cvtre$size[m]",
        "[1] 5\n",
        "> ",
        "",
        "> ",
        "tree <- prune.tree(tre,best = 4)",
        "> ",
        "plot(tree)",
        "> ",
        "text(tree,cex = .8,pretty=0)",
        "> ",
        "",
        "> ",
        "t_msetr <- mean((predict(tree,Btrain)-(Btrain$dis))^2)",
        "> ",
        "t_msetr",
        "[1] 1.071252\n",
        "> ",
        "cvtre <- cv.tree(tre)",
        "> ",
        "cvtre",
        "$size\n[1] 5 4 3 2 1\n\n$dev\n[1]  378.4300  374.7587  415.8725  561.1028 1502.7070\n\n$k\n[1]      -Inf  16.25844  66.70223 164.37812 937.62223\n\n$method\n[1] \"deviance\"\n\nattr(,\"class\")\n[1] \"prune\"         \"tree.sequence\"\n",
        "> ",
        "",
        "> ",
        "plot(cvtre$size,cvtre$dev,type = \"b\")",
        "> ",
        "",
        "> ",
        "m <- which.min(cvtre$dev)",
        "> ",
        "cvtre$size[m]",
        "[1] 4\n",
        "> ",
        "",
        "> ",
        "tree <- prune.tree(tre,best = 4)",
        "> ",
        "plot(tree)",
        "> ",
        "text(tree,cex = .8,pretty=0)",
        "> ",
        "",
        "> ",
        "t_msetr <- mean((predict(tree,Btrain)-(Btrain$dis))^2)",
        "> ",
        "t_msetr",
        "[1] 1.071252\n",
        "> ",
        "",
        "> ",
        "t_msete <- mean((predict(tree,Btest)-(Btest$dis))^2)",
        "> ",
        "t_msete",
        "[1] 0.8464587\n",
        "> ",
        "ranfo <- randomForest(dis ~ medv + age + nox, data = Btrain)",
        "> ",
        "ranfo <- randomForest(dis ~ medv + age + nox, data = Btrain)",
        "> ",
        "ranfo_msetr<- mean((predict(ranfo,Btrain) - (Btrain$dis))^2)",
        "> ",
        "ranfo_msetr",
        "[1] 0.2203837\n",
        "> ",
        "ranfo <- randomForest(dis ~ medv + age + nox, data = Btrain)",
        "> ",
        "",
        "> ",
        "ranfo_msetr<- mean((predict(ranfo,Btrain) - (Btrain$dis))^2)",
        "> ",
        "ranfo_msetr",
        "[1] 0.219082\n",
        "> ",
        "",
        "> ",
        "ranfo_msete <- mean((predict(ranfo,Btest) - (Btest$dis))^2)",
        "> ",
        "ranfo_msete",
        "[1] 0.7607229\n",
        "> ",
        "g_msetr <- mean((predict(fit,Btrain) - (Btrain$dis))^2)",
        "> ",
        "g_msetr",
        "[1] 1.036283\n",
        "> ",
        "g_msetr <- mean((predict(fit,Btrain) - (Btrain$dis))^2)",
        "> ",
        "g_msetr",
        "[1] 1.036283\n",
        "> ",
        "",
        "> ",
        "g_msete <- mean((predict(fit,Btest) - (Btest$dis))^2)",
        "> ",
        "g_msete",
        "[1] 0.8888948\n"
    ],
    "type" : [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ]
}